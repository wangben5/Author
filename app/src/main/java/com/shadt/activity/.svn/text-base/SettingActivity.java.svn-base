package com.shadt.activity;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONException;

import android.annotation.SuppressLint;
import android.app.AlertDialog;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.view.animation.LinearInterpolator;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.shadt.application.MyApp;
import com.shadt.bean.UpdateInfo;
import com.shadt.news.R;
import com.shadt.service.UPDATADownloadService;
import com.shadt.util.Contacts;
import com.shadt.util.XMLParserUtil;

public class SettingActivity extends BaseActivity {
	LinearLayout line_back;
	RelativeLayout line_exit, line_version, line_about, line_change_pwd;
	TextView title, version_txt;
	public String ACTION_FINISH = "finish";

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_set);
		PackageManager manager = mContext.getPackageManager();
		try {
			PackageInfo info = manager.getPackageInfo(
					mContext.getPackageName(), 0);
			version_name = info.versionName; // 版本名
			currentVersionCode = info.versionCode; // 版本号
		} catch (NameNotFoundException e) {
			// TODO Auto-generated catch blockd
			e.printStackTrace();
		}
		initPages();
	}

	@Override
	public void initPages() {
		// TODO Auto-generated method stub
		initTop();
		initView();
	}

	public void initTop() {
		line_back = (LinearLayout) findViewById(R.id.line_back);
		line_back.setOnClickListener(this);
		title = (TextView) findViewById(R.id.title);
		title.setText("设置");
	}

	public void initView() {
		line_exit = (RelativeLayout) findViewById(R.id.exit);
		line_version = (RelativeLayout) findViewById(R.id.update);
		line_about = (RelativeLayout) findViewById(R.id.about);
		line_change_pwd = (RelativeLayout) findViewById(R.id.change_pwd);
		version_txt = (TextView) findViewById(R.id.update_txt);
		version_txt.setText("版本更新" + "(" + version_name + ")");
		line_exit.setOnClickListener(this);
		line_version.setOnClickListener(this);
		line_change_pwd.setOnClickListener(this);
		line_about.setOnClickListener(this);
	}

	@Override
	public void onClickListener(View v) {
		// TODO Auto-generated method stub
		switch (v.getId()) {
		case R.id.line_back:
			MainActivity.is_finish = false;
			finish();

			break;
		case R.id.update:
			showdialog();
			handler.sendEmptyMessageDelayed(2, 1000);
			break;
		case R.id.change_pwd:
			Intent it = new Intent(mContext, Change_pwd_Activity.class);
			startActivity(it);
			break;
		case R.id.exit:
			finishi_dialog();
			break;
		case R.id.about:
			Intent itd = new Intent(mContext, AboutActivity.class);
			startActivity(itd);
			break;
		default:
			break;
		}
	}

	// 用handle进行 更新ui
	Handler handler = new Handler() {
		@Override
		@SuppressLint("ShowToast")
		public void handleMessage(android.os.Message msg) {
			switch (msg.what) {
			case 6:
				Log.v("ceshi", "show");
				hidedialogs();
				updata_dialog();
				break;
			case 0:
				showdialog();
				break;
			case 1:
				hidedialogs();
				break;
			case 2:
				new Thread(networkTask2).start();
				break;
			default:
				break;
			}
		};
	};
	// 线程发送请求 这个是 获取 logo 图标 和 app_name 版本信息
	Runnable networkTask2 = new Runnable() {

		@Override
		public void run() {
			// TODO
			// 在这里进行 http request.网络请求相关操作
			Looper.prepare();
			try {
				SubmitPost(Contacts.AREA_ID, "0", null, null, null, null, null,
						Contacts.UPDATA);
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			Looper.loop();
		}
	};
	// 获取 板块内容 和 logo name.
	private MyApp app;
	private Context mContext = SettingActivity.this;
	private String version_name;
	private int currentVersionCode;
	private UpdateInfo updateInfo;

	public void SubmitPost(String string1, String string2, String string3,
			String string4, String string5, String string6, String string7,
			String url) throws IOException {
		HttpClient httpclient = new DefaultHttpClient();
		HttpPost httppost = new HttpPost(url);

		List<NameValuePair> formparams = new ArrayList<NameValuePair>();
		formparams.add(new BasicNameValuePair("vsInData0", string1));
		formparams.add(new BasicNameValuePair("vsInData1", string2));
		formparams.add(new BasicNameValuePair("vsInData2", string3));
		formparams.add(new BasicNameValuePair("vsInData3", string4));
		formparams.add(new BasicNameValuePair("vsInData4", string5));
		formparams.add(new BasicNameValuePair("vsInData5", string6));
		formparams.add(new BasicNameValuePair("vsInData6", string7));
		UrlEncodedFormEntity uefEntity;
		uefEntity = new UrlEncodedFormEntity(formparams, "UTF-8");
		httppost.setEntity(uefEntity);
		HttpResponse response = httpclient.execute(httppost);

		HttpEntity entity = response.getEntity();
		if (entity != null) {

			updateInfo = new UpdateInfo();
			InputStream instreams = entity.getContent();

			String str = ConvertStreamToString(instreams);
			Log.v("ceshi", "" + str);
			try {
				updateInfo = XMLParserUtil.Parser_version(str);
			} catch (JSONException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			app = (MyApp) getApplication();
			// down_url = updateInfo.getVsOutData6();

			// 上面是获取manifest中的版本数据，我是使用versionCode
			// 在从服务器获取到最新版本的versionCode,比较
			UPDATADownloadService.apkUrl = updateInfo.getVsOutData6();
			Log.v("ceshi",
					"version_name:" + version_name + ":"
							+ updateInfo.getVsOutData4());
			handler.sendEmptyMessage(1);
			if (!version_name.equals(updateInfo.getVsOutData4())) {
				handler.sendEmptyMessage(6);

			} else {
				Toast.makeText(mContext, "当前为最新版本！", 0).show();
			}
		}
	}

	public static String ConvertStreamToString(InputStream is) {

		BufferedReader reader = new BufferedReader(new InputStreamReader(is));

		StringBuilder sb = new StringBuilder();

		String line = null;

		try {

			while ((line = reader.readLine()) != null) {

				sb.append(line + "\n");

			}

		} catch (IOException e) {

			System.out.println("Error=" + e.toString());

		} finally {

			try {

				is.close();

			} catch (IOException e) {

				System.out.println("Error=" + e.toString());

			}
		}
		return sb.toString();

	}

	AlertDialog myDialog;

	public void finishi_dialog() {
		// TODO Auto-generated method stub

		myDialog = new AlertDialog.Builder(mContext).create();
		myDialog.show();
		myDialog.getWindow().setContentView(R.layout.finishiapp_dialog);
		myDialog.getWindow().findViewById(R.id.txt_save_no)
				.setOnClickListener(new View.OnClickListener() {
					@Override
					public void onClick(View v) {
						myDialog.dismiss();
					}
				});
		myDialog.getWindow().findViewById(R.id.txt_save)
				.setOnClickListener(new View.OnClickListener() {

					@Override
					public void onClick(View v) {
						myDialog.dismiss();
						
						SharedPreferences preferences = getSharedPreferences("user",
								Context.MODE_PRIVATE);
						 
						Editor editor = preferences.edit();
						editor.putString("pass", "");
						editor.commit();
						
						MainActivity.is_finish = true;
						finish();
						
//						Intent it = new Intent(mContext, LoginActivity.class);
//						startActivity(it);
					}
				});
	}
	
	
	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {

		if (keyCode == KeyEvent.KEYCODE_BACK) {
			// 1235645488 - 0 > 3000
			MainActivity.is_finish = false;
			finish();
		}
		return false;
	}

}
